#!/usr/bin/env bash

set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
APP="$1"; IMAGE="dokku/$APP"
echo "-----> Installing clamav ..."
COMMAND=$(cat <<EOF
echo "-----> install requirements"

add-apt-repository multiverse
apt-get -y update
apt-get install -y clamav clamav-daemon clamd clamav-freshclam libclamunrar9
apt-get clean
rm -rf /var/lib/apt/lists/*

echo "-----> update database"
systemctl stop clamav-daemon.service
rm /var/log/clamav/freshclam.log
systemctl start clamav-daemon
freshclam
echo "-----> Setting permissions"
mkdir /var/run/clamav
touch /var/run/clamav/clamd.sock
touch /var/run/clamav/clamd.ctl
chown clamav:clamav /var/run/clamav
chmod 750 /var/run/clamav
sleep 1 # wait so that docker run has not exited before docker attach

sed -i 's/^Foreground .*$/Foreground true/g' /etc/clamav/clamd.conf
sed 's/LocalSocketGroup clamav/LocalSocketGroup root/g' /etc/clamav/clamd.conf
sed 's/User clamav/User root/g' /etc/clamav/clamd.conf
echo "TCPSocket 3310" >> /etc/clamav/clamd.conf
if ! [ -z $HTTPProxyServer ]; then echo "HTTPProxyServer $HTTPProxyServer" >> /etc/clamav/freshclam.conf; fi
if ! [ -z $HTTPProxyPort   ]; then echo "HTTPProxyPort $HTTPProxyPort" >> /etc/clamav/freshclam.conf; fi
sed -i 's/^Foreground .*$/Foreground true/g' /etc/clamav/freshclam.conf
EOF
)
id=$(docker run -d $IMAGE /bin/bash -e -c "$COMMAND" --expose 3310)
#enable logs
docker attach $id
test $(docker wait $id) -eq 0
docker commit $id $IMAGE > /dev/null
