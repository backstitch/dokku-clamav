#!/usr/bin/env bash

set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
APP="$1"; IMAGE="dokku/$APP"
echo APP
echo ID
echo "-----> Installing clamav ..."
COMMAND=$(cat <<EOF
echo "-----> install requirements"

grep -v "deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main" /etc/apt/sources.list > temp.txt; mv temp.txt /etc/apt/sources.list

apt-get update
apt-get install -y software-properties-common
apt-get update
add-apt-repository multiverse

echo "-----> Add clamav user"
groupadd clamav
useradd -g clamav -s /bin/false -c "Clam Antivirus" clamav

echo "-----> Manually install clamav"
cd /home && \
wget -q https://www.clamav.net/downloads/production/clamav-0.103.5.tar.gz && \
tar xzf clamav-0.103.5.tar.gz && \
cd clamav-0.103.5 && \
mkdir build && cd build && \
echo "-----> Making"
../configure > /dev/null 2>&1 && \
make > /dev/null 2>&1 && \
make check VG=1 > /dev/null 2>&1 && \
make install > /dev/null 2>&1
echo "-----> Make Complete"

echo "-----> Update configurations and database"
ldconfig &&\
clamconf -g freshclam.conf > freshclam.conf && \
clamconf -g clamd.conf > clamd.conf

echo "-----> Update Owners"
chown clamav:clamav /usr/local/etc/freshclam.conf && \
chown clamav:clamav /usr/local/etc/clamd.conf

echo "-----> Remove 'Example' line"
sed -i 's/^Example/#Example/g' /usr/local/etc/freshclam.conf && \
sed -i 's/^Example/#Example/g' /usr/local/etc/clamd.conf

echo "-----> Update Configuration"
sed -i 's/^Foreground .*$/Foreground true/g' /usr/local/etc/clamd.conf && \
echo "TCPSocket 3310" >> /usr/local/etc/clamd.conf && \
if ! [ -z $HTTPProxyServer ]; then echo "HTTPProxyServer $HTTPProxyServer" >> /usr/local/etc/freshclam.conf; fi && \
if ! [ -z $HTTPProxyPort   ]; then echo "HTTPProxyPort $HTTPProxyPort" >> /usr/local/etc/freshclam.conf; fi && \
sed -i 's/^Foreground .*$/Foreground true/g' /usr/local/etc/freshclam.conf

freshclam -v && \
clamd &

sleep 1 # wait so that docker run has not exited before docker attach

EOF
)
id=$(docker run -d $IMAGE /bin/bash -e -c "$COMMAND")
#enable logs
docker attach $id
test $(docker wait $id) -eq 0
docker commit $id $IMAGE > /dev/null
