#!/usr/bin/env bash

set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
APP="$1"; IMAGE="dokku/$APP"
echo "-----> Installing clamav ..."
COMMAND=$(cat <<EOF
echo "-----> install requirements"

apt-get install -y clamav clamav-daemon

mkdir /usr/local/etc/clamav

# clamdscan is needed for the gem to get the clamav scanner
mkdir /usr/bin/clamdscan
chown clamav /usr/bin/clamdscan
chmod 775 /usr/bin/clamdscan

# Configure clamav daemon and updater
touch /usr/local/etc/clamav/freshclam.conf
touch /usr/local/etc/clamav/clamd.conf

cd /usr/local/etc/clamav
echo "-----> update database"
echo "DatabaseMirror database.clamav.net" >> freshclam.conf 
freshclam -v # Run updater

echo "LocalSocket /usr/local/var/run/clamav/clamd.sock" >> clamd.conf

clamd & # Start daemon

sleep 1 # wait so that docker run has not exited before docker attach

EOF
)
id=$(docker run -d $IMAGE /bin/bash -e -c "$COMMAND")
#enable logs
docker attach $id
test $(docker wait $id) -eq 0
docker commit $id $IMAGE > /dev/null
